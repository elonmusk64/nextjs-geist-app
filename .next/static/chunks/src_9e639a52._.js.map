{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;KArBS;AAuBT,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE;IACrE,qBACE,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB;MAzBS","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/apiClient.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse, InternalAxiosRequestConfig, AxiosError } from 'axios'\n\n// Create axios instance with base configuration\nconst apiClient: AxiosInstance = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\n// Request interceptor to add JWT token\napiClient.interceptors.request.use(\n  (config: InternalAxiosRequestConfig) => {\n    if (typeof window !== 'undefined') {\n      const token = localStorage.getItem('jwt_token')\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`\n      }\n    }\n    return config\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error)\n  }\n)\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(\n  (response: AxiosResponse) => {\n    return response\n  },\n  (error: AxiosError) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('jwt_token')\n        window.location.href = '/auth/login'\n      }\n    }\n    return Promise.reject(error)\n  }\n)\n\n// Helper functions for common API operations\nexport const apiHelpers = {\n  // GET request helper\n  async get<T>(endpoint: string): Promise<T> {\n    try {\n      const response = await apiClient.get<T>(endpoint)\n      return response.data\n    } catch (error) {\n      console.error(`GET ${endpoint} failed:`, error)\n      throw error\n    }\n  },\n\n  // POST request helper\n  async post<T>(endpoint: string, data?: any): Promise<T> {\n    try {\n      const response = await apiClient.post<T>(endpoint, data)\n      return response.data\n    } catch (error) {\n      console.error(`POST ${endpoint} failed:`, error)\n      throw error\n    }\n  },\n\n  // PUT request helper\n  async put<T>(endpoint: string, data?: any): Promise<T> {\n    try {\n      const response = await apiClient.put<T>(endpoint, data)\n      return response.data\n    } catch (error) {\n      console.error(`PUT ${endpoint} failed:`, error)\n      throw error\n    }\n  },\n\n  // DELETE request helper\n  async delete<T>(endpoint: string): Promise<T> {\n    try {\n      const response = await apiClient.delete<T>(endpoint)\n      return response.data\n    } catch (error) {\n      console.error(`DELETE ${endpoint} failed:`, error)\n      throw error\n    }\n  },\n}\n\nexport default apiClient\n"],"names":[],"mappings":";;;;AAIW;AAJX;;AAEA,gDAAgD;AAChD,MAAM,YAA2B,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC5C,SAAS,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI;IAC5C,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,uCAAuC;AACvC,UAAU,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,CAAC;IACC,wCAAmC;QACjC,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO;YACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;QAClD;IACF;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,0CAA0C;AAC1C,UAAU,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC;IACC,OAAO;AACT,GACA,CAAC;IACC,IAAI,MAAM,QAAQ,EAAE,WAAW,KAAK;QAClC,6BAA6B;QAC7B,wCAAmC;YACjC,aAAa,UAAU,CAAC;YACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;QACzB;IACF;IACA,OAAO,QAAQ,MAAM,CAAC;AACxB;AAIK,MAAM,aAAa;IACxB,qBAAqB;IACrB,MAAM,KAAO,QAAgB;QAC3B,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,GAAG,CAAI;YACxC,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,IAAI,EAAE,SAAS,QAAQ,CAAC,EAAE;YACzC,MAAM;QACR;IACF;IAEA,sBAAsB;IACtB,MAAM,MAAQ,QAAgB,EAAE,IAAU;QACxC,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,IAAI,CAAI,UAAU;YACnD,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,KAAK,EAAE,SAAS,QAAQ,CAAC,EAAE;YAC1C,MAAM;QACR;IACF;IAEA,qBAAqB;IACrB,MAAM,KAAO,QAAgB,EAAE,IAAU;QACvC,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,GAAG,CAAI,UAAU;YAClD,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,IAAI,EAAE,SAAS,QAAQ,CAAC,EAAE;YACzC,MAAM;QACR;IACF;IAEA,wBAAwB;IACxB,MAAM,QAAU,QAAgB;QAC9B,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,MAAM,CAAI;YAC3C,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,SAAS,QAAQ,CAAC,EAAE;YAC5C,MAAM;QACR;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/chat/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport { Separator } from '@/components/ui/separator'\nimport { apiHelpers } from '@/lib/apiClient'\n\ninterface Message {\n  id: string\n  senderId: string\n  senderName: string\n  content: string\n  timestamp: string\n  isRead: boolean\n}\n\ninterface Conversation {\n  id: string\n  participantId: string\n  participantName: string\n  participantTitle: string\n  participantCompany: string\n  lastMessage: string\n  lastMessageTime: string\n  unreadCount: number\n  isOnline: boolean\n}\n\ninterface ChatUser {\n  id: string\n  name: string\n  title: string\n  company: string\n}\n\nexport default function ChatPage() {\n  const [conversations, setConversations] = useState<Conversation[]>([])\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null)\n  const [messages, setMessages] = useState<Message[]>([])\n  const [newMessage, setNewMessage] = useState('')\n  const [currentUser] = useState<ChatUser>({\n    id: 'current-user',\n    name: 'Alex Thompson',\n    title: 'Data Scientist',\n    company: 'TechCorp'\n  })\n  const [loading, setLoading] = useState(true)\n  const [sending, setSending] = useState(false)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  // Mock data for demonstration\n  const mockConversations: Conversation[] = [\n    {\n      id: '1',\n      participantId: 'user-1',\n      participantName: 'Sarah Johnson',\n      participantTitle: 'Senior Data Scientist',\n      participantCompany: 'TechCorp',\n      lastMessage: 'Thanks for the career advice! Really helpful.',\n      lastMessageTime: '2024-01-20T15:30:00Z',\n      unreadCount: 2,\n      isOnline: true\n    },\n    {\n      id: '2',\n      participantId: 'user-2',\n      participantName: 'Mike Chen',\n      participantTitle: 'Product Manager',\n      participantCompany: 'InnovateLab',\n      lastMessage: 'Would love to discuss the project opportunity.',\n      lastMessageTime: '2024-01-20T14:15:00Z',\n      unreadCount: 0,\n      isOnline: false\n    },\n    {\n      id: '3',\n      participantId: 'user-3',\n      participantName: 'Emily Rodriguez',\n      participantTitle: 'UX Designer',\n      participantCompany: 'DesignStudio',\n      lastMessage: 'The design mockups look great!',\n      lastMessageTime: '2024-01-20T12:45:00Z',\n      unreadCount: 1,\n      isOnline: true\n    },\n    {\n      id: '4',\n      participantId: 'user-4',\n      participantName: 'David Kim',\n      participantTitle: 'Software Engineer',\n      participantCompany: 'CodeWorks',\n      lastMessage: 'Let me know if you need help with the implementation.',\n      lastMessageTime: '2024-01-19T16:20:00Z',\n      unreadCount: 0,\n      isOnline: false\n    }\n  ]\n\n  const mockMessages: { [key: string]: Message[] } = {\n    '1': [\n      {\n        id: '1',\n        senderId: 'user-1',\n        senderName: 'Sarah Johnson',\n        content: 'Hi Alex! I saw your profile and noticed we have similar backgrounds in data science.',\n        timestamp: '2024-01-20T14:00:00Z',\n        isRead: true\n      },\n      {\n        id: '2',\n        senderId: 'current-user',\n        senderName: 'Alex Thompson',\n        content: 'Hi Sarah! Yes, I noticed that too. Your work at TechCorp looks really interesting.',\n        timestamp: '2024-01-20T14:05:00Z',\n        isRead: true\n      },\n      {\n        id: '3',\n        senderId: 'user-1',\n        senderName: 'Sarah Johnson',\n        content: 'Thanks! I\\'d love to hear about your experience with machine learning projects. Any advice for someone looking to advance in this field?',\n        timestamp: '2024-01-20T14:10:00Z',\n        isRead: true\n      },\n      {\n        id: '4',\n        senderId: 'current-user',\n        senderName: 'Alex Thompson',\n        content: 'Absolutely! I think the key is to work on diverse projects and stay updated with the latest research. Have you considered specializing in a particular domain like NLP or computer vision?',\n        timestamp: '2024-01-20T14:15:00Z',\n        isRead: true\n      },\n      {\n        id: '5',\n        senderId: 'user-1',\n        senderName: 'Sarah Johnson',\n        content: 'That\\'s great advice! I\\'ve been leaning towards NLP lately. The applications in healthcare seem really promising.',\n        timestamp: '2024-01-20T15:25:00Z',\n        isRead: false\n      },\n      {\n        id: '6',\n        senderId: 'user-1',\n        senderName: 'Sarah Johnson',\n        content: 'Thanks for the career advice! Really helpful.',\n        timestamp: '2024-01-20T15:30:00Z',\n        isRead: false\n      }\n    ],\n    '2': [\n      {\n        id: '7',\n        senderId: 'user-2',\n        senderName: 'Mike Chen',\n        content: 'Hey Alex, I came across your profile through our mutual connection. I have a project opportunity that might interest you.',\n        timestamp: '2024-01-20T13:30:00Z',\n        isRead: true\n      },\n      {\n        id: '8',\n        senderId: 'current-user',\n        senderName: 'Alex Thompson',\n        content: 'Hi Mike! I\\'d be interested to hear more about it. What kind of project are you working on?',\n        timestamp: '2024-01-20T13:45:00Z',\n        isRead: true\n      },\n      {\n        id: '9',\n        senderId: 'user-2',\n        senderName: 'Mike Chen',\n        content: 'We\\'re building an AI-powered analytics platform for e-commerce. Looking for someone with your background in data science and machine learning.',\n        timestamp: '2024-01-20T14:00:00Z',\n        isRead: true\n      },\n      {\n        id: '10',\n        senderId: 'user-2',\n        senderName: 'Mike Chen',\n        content: 'Would love to discuss the project opportunity.',\n        timestamp: '2024-01-20T14:15:00Z',\n        isRead: true\n      }\n    ]\n  }\n\n  useEffect(() => {\n    const fetchChatData = async () => {\n      try {\n        setLoading(true)\n        \n        // Try to fetch from API, fallback to mock data\n        try {\n          const conversationsData = await apiHelpers.get<Conversation[]>('/chat/conversations')\n          setConversations(conversationsData)\n        } catch (apiError) {\n          // Use mock data if API is not available\n          console.log('API not available, using mock data')\n          setConversations(mockConversations)\n        }\n      } catch (err) {\n        console.error('Failed to load chat data:', err)\n        setConversations(mockConversations)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchChatData()\n  }, [])\n\n  useEffect(() => {\n    if (selectedConversation) {\n      const fetchMessages = async () => {\n        try {\n          // Try to fetch from API, fallback to mock data\n          try {\n            const messagesData = await apiHelpers.get<Message[]>(`/chat/conversations/${selectedConversation}/messages`)\n            setMessages(messagesData)\n          } catch (apiError) {\n            // Use mock data if API is not available\n            const conversationMessages = mockMessages[selectedConversation] || []\n            setMessages(conversationMessages)\n          }\n        } catch (err) {\n          console.error('Failed to load messages:', err)\n          const conversationMessages = mockMessages[selectedConversation] || []\n          setMessages(conversationMessages)\n        }\n      }\n\n      fetchMessages()\n    }\n  }, [selectedConversation])\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedConversation || sending) return\n\n    try {\n      setSending(true)\n      \n      const messageToSend: Message = {\n        id: Date.now().toString(),\n        senderId: currentUser.id,\n        senderName: currentUser.name,\n        content: newMessage.trim(),\n        timestamp: new Date().toISOString(),\n        isRead: true\n      }\n\n      // Optimistically add message to UI\n      setMessages(prev => [...prev, messageToSend])\n      setNewMessage('')\n\n      // Update conversation list\n      setConversations(prev => prev.map(conv => \n        conv.id === selectedConversation \n          ? { \n              ...conv, \n              lastMessage: messageToSend.content,\n              lastMessageTime: messageToSend.timestamp \n            }\n          : conv\n      ))\n\n      // Try to send to API\n      try {\n        await apiHelpers.post(`/chat/conversations/${selectedConversation}/messages`, {\n          content: messageToSend.content\n        })\n      } catch (apiError) {\n        // Message already added optimistically, so we don't need to do anything\n        console.log('API not available, message sent locally')\n      }\n    } catch (err) {\n      console.error('Failed to send message:', err)\n    } finally {\n      setSending(false)\n    }\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSendMessage()\n    }\n  }\n\n  const formatTime = (timestamp: string) => {\n    const date = new Date(timestamp)\n    const now = new Date()\n    const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60)\n\n    if (diffInHours < 24) {\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    } else {\n      return date.toLocaleDateString([], { month: 'short', day: 'numeric' })\n    }\n  }\n\n  const selectedConv = conversations.find(conv => conv.id === selectedConversation)\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-96\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto h-[calc(100vh-8rem)]\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-foreground mb-2\">Messages</h1>\n        <p className=\"text-muted-foreground\">\n          Connect and communicate with your professional network\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 h-full\">\n        {/* Conversations List */}\n        <Card className=\"lg:col-span-1\">\n          <CardHeader>\n            <CardTitle>Conversations</CardTitle>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            <ScrollArea className=\"h-[calc(100vh-16rem)]\">\n              <div className=\"space-y-1 p-4\">\n                {conversations.map((conversation) => (\n                  <div\n                    key={conversation.id}\n                    onClick={() => setSelectedConversation(conversation.id)}\n                    className={`p-3 rounded-lg cursor-pointer transition-colors ${\n                      selectedConversation === conversation.id\n                        ? 'bg-primary text-primary-foreground'\n                        : 'hover:bg-accent'\n                    }`}\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"relative\">\n                        <div className=\"w-10 h-10 bg-muted rounded-full flex items-center justify-center\">\n                          <span className=\"text-sm font-medium\">\n                            {conversation.participantName.split(' ').map(n => n[0]).join('')}\n                          </span>\n                        </div>\n                        {conversation.isOnline && (\n                          <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-background\"></div>\n                        )}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center justify-between\">\n                          <p className=\"font-medium truncate\">\n                            {conversation.participantName}\n                          </p>\n                          <span className=\"text-xs opacity-70\">\n                            {formatTime(conversation.lastMessageTime)}\n                          </span>\n                        </div>\n                        <p className=\"text-sm opacity-70 truncate\">\n                          {conversation.lastMessage}\n                        </p>\n                      </div>\n                      {conversation.unreadCount > 0 && (\n                        <div className=\"w-5 h-5 bg-destructive rounded-full flex items-center justify-center\">\n                          <span className=\"text-xs text-destructive-foreground\">\n                            {conversation.unreadCount}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </ScrollArea>\n          </CardContent>\n        </Card>\n\n        {/* Chat Area */}\n        <Card className=\"lg:col-span-2\">\n          {selectedConv ? (\n            <>\n              <CardHeader>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"relative\">\n                    <div className=\"w-10 h-10 bg-primary rounded-full flex items-center justify-center\">\n                      <span className=\"text-sm font-bold text-primary-foreground\">\n                        {selectedConv.participantName.split(' ').map(n => n[0]).join('')}\n                      </span>\n                    </div>\n                    {selectedConv.isOnline && (\n                      <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-background\"></div>\n                    )}\n                  </div>\n                  <div>\n                    <CardTitle className=\"text-lg\">{selectedConv.participantName}</CardTitle>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {selectedConv.participantTitle} at {selectedConv.participantCompany}\n                    </p>\n                  </div>\n                </div>\n              </CardHeader>\n              <Separator />\n              <CardContent className=\"p-0 flex flex-col h-[calc(100vh-20rem)]\">\n                {/* Messages */}\n                <ScrollArea className=\"flex-1 p-4\">\n                  <div className=\"space-y-4\">\n                    {messages.map((message) => (\n                      <div\n                        key={message.id}\n                        className={`flex ${\n                          message.senderId === currentUser.id ? 'justify-end' : 'justify-start'\n                        }`}\n                      >\n                        <div\n                          className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                            message.senderId === currentUser.id\n                              ? 'bg-primary text-primary-foreground'\n                              : 'bg-muted'\n                          }`}\n                        >\n                          <p className=\"text-sm\">{message.content}</p>\n                          <p className={`text-xs mt-1 ${\n                            message.senderId === currentUser.id\n                              ? 'text-primary-foreground/70'\n                              : 'text-muted-foreground'\n                          }`}>\n                            {formatTime(message.timestamp)}\n                          </p>\n                        </div>\n                      </div>\n                    ))}\n                    <div ref={messagesEndRef} />\n                  </div>\n                </ScrollArea>\n\n                {/* Message Input */}\n                <div className=\"p-4 border-t\">\n                  <div className=\"flex space-x-2\">\n                    <Input\n                      placeholder=\"Type your message...\"\n                      value={newMessage}\n                      onChange={(e) => setNewMessage(e.target.value)}\n                      onKeyPress={handleKeyPress}\n                      disabled={sending}\n                      className=\"flex-1\"\n                    />\n                    <Button \n                      onClick={handleSendMessage}\n                      disabled={!newMessage.trim() || sending}\n                    >\n                      {sending ? 'Sending...' : 'Send'}\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </>\n          ) : (\n            <CardContent className=\"flex items-center justify-center h-full\">\n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-foreground mb-2\">\n                  Select a conversation\n                </h3>\n                <p className=\"text-muted-foreground\">\n                  Choose a conversation from the list to start messaging\n                </p>\n              </div>\n            </CardContent>\n          )}\n        </Card>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}